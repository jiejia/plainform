import type { Metadata } from "next";
import "./globals.css";
import { getOptions } from "@/features/setting/actions/setting-action";
import { Providers } from "./providers";
import { Setting } from "@/features/core/types/app";
import ThemeSync from "@/features/core/components/shared/theme-sync";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const getSetting = async () => {
    const res = await getOptions([], ['theme', 'default_language']);
    return res;
  }

  const setting = await getSetting();

  return (
    <html lang={setting.general.default_language} suppressHydrationWarning>
      <head>
      <script
          dangerouslySetInnerHTML={{
            __html: `
              (function() {
                try {
                  const theme = localStorage.getItem('plainform_theme') || '${setting.appearances.theme}';
                  const root = document.documentElement;
                  
                  if (theme === 'system') {
                    const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
                    root.classList.add(systemTheme);
                  } else {
                    root.classList.add(theme);
                  }
                } catch (e) {
                  // If localStorage is not available, use default theme
                  document.documentElement.classList.add('${setting.appearances.theme}');
                }
              })();
            `,
          }}
        />
      </head>
      <body
        className={`antialiased min-h-screen`}
      >
        <ThemeSync />
        <Providers setting={setting as Setting}>
          {children}
        </Providers>
      </body>
    </html>
  );
}

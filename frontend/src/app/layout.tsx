import type { Metadata } from "next";
import { Providers } from "./providers";
import "./globals.css";
import { getOptions } from "@/features/setting/actions/setting-action";
import { Setting } from "@/features/core/types/app";
import Cookies from 'js-cookie'
import { CookieKey } from "@/features/core/constants/cookie-key";
import { cookies } from 'next/headers'

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const getSetting = async () => {
    const res = await getOptions([], ['theme', 'default_language']);
    return res;
  }

  const setting = await getSetting();

  const cookieStore = await cookies();

  let visitorTheme = cookieStore.get(CookieKey.VISITOR_THEME)?.value || '';
  if (! visitorTheme) {
    visitorTheme = setting.appearances.theme;
  }

  let visitorLanguage = cookieStore.get(CookieKey.VISITOR_LANG)?.value || '';
  if (! visitorLanguage) {
    visitorLanguage = setting.general.default_language;
  }

  return (
    <html lang={visitorLanguage} className={visitorTheme}>
      <body
        className={`antialiased min-h-screen`}
      >
        <Providers setting={setting as Setting} visitorLanguage={visitorLanguage} visitorTheme={visitorTheme}>
          {children}
        </Providers>
      </body>
    </html>
  );
}
